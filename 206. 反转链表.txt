/**
 * Definition for singly-linked list.
 * struct ListNode {
 *     int val;
 *     ListNode *next;
 *     ListNode(int x) : val(x), next(NULL) {}
 * };
 */
class Solution {
public:
    
    ListNode* resv(ListNode* cur,ListNode* next)
    {

        if(next!= nullptr)
        {

            ListNode* head = resv(next,next->next);
            
            next->next= cur;
            cur->next =nullptr;
            return head;
        }
        else
        {

            return  cur;
        }
    }
    ListNode* reverseList(ListNode* head) {
        /*三指针法 
        
        if(head==nullptr)
            return head;
        
        ListNode* Pre=nullptr;
        ListNode* Cur =head;
        ListNode* Next =Cur->next;
        
        while(Next)
        {
            Cur->next=Pre;
            Pre=Cur;
            Cur=Next;
            Next= Next->next;
        }
        Cur->next=Pre;
           
       return Cur;*/
        
        
        /*递归法*/
        
        if(head==nullptr)
            return nullptr;
        
        
   
	if ( head->next == NULL)
	{
		return head;
	}
	ListNode *tmp = resv(head, head->next);
	return tmp;
      
    
        
        
        
    }
};