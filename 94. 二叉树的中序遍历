/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode(int x) : val(x), left(NULL), right(NULL) {}
 * };
 */
class Solution {
public:
    /////////////////////////////////////////////
    void inorder(TreeNode* root,vector<int>& v)
    {
         
        if(root==nullptr)
            return ;
        if(root->left!=nullptr)
            inorder(root->left,v);
        v.push_back(root->val);
        
        if(root->right!=nullptr)
            inorder(root->right,v);
    }
    
    //递归
    vector<int> inorderTraversal(TreeNode* root) {
        ////////////////////////////
        //递归
     /*   vector<int> v;
        if(root==nullptr)
            return v; 
        inorder(root,v);
        return v;
    }
    */
        
        ///////////////////////////////////////////////////////////////////////////////
        //非递归（栈）
        
        stack<TreeNode*> s;
        vector<int> v;
        TreeNode* cur=root; 
        while(!s.empty()||cur!=nullptr)
        {
             if(cur!=nullptr)
             {
               s.push(cur);
                 cur=cur->left;
             }
            else
            {
                cur=s.top();
                v.push_back(cur->val);
                s.pop();
                cur=cur->right;
            }
            
        }
            return v;
        }
};
